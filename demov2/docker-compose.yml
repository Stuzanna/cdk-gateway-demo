version: '3.7'
services:
  conduktor-gateway:
    # image: ghcr.io/conduktor/conduktor-gateway-distro:2.2.0-rc2
    # image: ghcr.io/conduktor/conduktor-gateway-distro:2.2.0-rc1
    image: conduktor/conduktor-gateway:2.1.6
    hostname: conduktor-gateway-demo-v2
    container_name: conduktor-gateway-demo-v2
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka1-demo-v2:9092,kafka2-demo-v2:9093
      GATEWAY_SECURITY_PROTOCOL: SASL_PLAINTEXT
      GATEWAY_FEATURE_FLAGS_MULTI_TENANCY: true
    ports:
      - "8888:8888"
    healthcheck:
      test: curl localhost:8888/health
      interval: 5s
      retries: 25
    depends_on:
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy

  conduktor-console:
      # image: ghcr.io/conduktor/conduktor-platform:1.19.0-rc1
      # image: ghcr.io/conduktor/conduktor-platform:sha-a196b0a
      # image: ghcr.io/conduktor/conduktor-platform:sha-3001b09
      image: ghcr.io/conduktor/conduktor-platform:sha-c04dd28
      hostname: conduktor-console-demo-v2
      container_name: conduktor-console-demo-v2
      ports:
        - "8080:8080"
      volumes:
        - type: bind
          source: "./platform-config.yaml"
          target: /opt/conduktor/platform-config.yaml
          read_only: true
      depends_on:
        - kafka1
      environment:
        CDK_IN_CONF_FILE: /opt/conduktor/platform-config.yaml
        KAFKA_BOOTSTRAP_SERVER: kafka1-demo-v2:9092
        LICENSE_KEY: ${CDK_LICENSE}
        PROXY_TOKEN: eyJhbGciOiJIUzI1NiJ9.eyJvcmdJZCI6MSwiY2x1c3RlcklkIjoxLCJ1c2VybmFtZSI6InRlc3RAY29uZHVrdG9yLmlvIn0.Eb94MxCyesPeVdQmm0EDBGvhwcx8j-ST-mvmdAId_j0
        CDK_DATABASE_URL: postgresql://conduktor:change_me@postgresql-demo-v2:5432/conduktor-platform
        # CDK_ROOT_LOG_LEVEL: DEBUG
        # CDK_ROOT_LOG_COLOR:	true
      healthcheck:
        test: curl -f http://localhost:8080/platform/api/modules/health/live || exit 1
        interval: 10s
        start_period: 10s
        timeout: 5s
        retries: 3
  
  postgresql:
      image: postgres:14
      hostname: postgresql-demo-v2
      container_name: postgresql-demo-v2
      volumes:
        - pg_data_demo_v2:/var/lib/postgresql/data
      environment:
        PGDATA: "/var/lib/postgresql/data"
        POSTGRES_DB: "conduktor-platform"
        POSTGRES_USER: "conduktor"
        POSTGRES_PASSWORD: "change_me"
        POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    hostname: zookeeper-demo-v2
    container_name: zookeeper-demo-v2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: nc -zv zookeeper 2181 || exit 1
      interval: 5s
      retries: 25

  kafka1:
    image: confluentinc/cp-kafka:7.4.1
    hostname: kafka1-demo-v2
    container_name: kafka1-demo-v2
    depends_on:
      - zookeeper
    ports:
        - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_REPLICATION_FACTOR: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
    healthcheck:
      test: nc -zv kafka1 9092 || exit 1
      interval: 5s
      retries: 25

  kafka2:
    image: confluentinc/cp-kafka:7.4.1
    hostname: kafka2-demo-v2
    container_name: kafka2-demo-v2
    depends_on:
      - zookeeper
    ports:
        - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093
      KAFKA_REPLICATION_FACTOR: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
    healthcheck:
      test: nc -zv kafka2 9093 || exit 1
      interval: 5s
      retries: 25
  
  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.1
    hostname: schema-registry-demo-v2
    container_name: schema-registry-demo-v2
    depends_on:
      - kafka1
    ports:
      - "8081:8081"
    volumes:
      - type: bind
        source: "./clientConfig"
        target: /clientConfig
        read_only: true
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka1:9092
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: WARN
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"

  

  # conduktor-gateway-2:
  #   image: conduktor/conduktor-gateway:2.1.2
  #   hostname: conduktor-gateway-2
  #   container_name: conduktor-gateway-2
  #   environment:
  #     KAFKA_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9093
  #     GATEWAY_SECURITY_PROTOCOL: SASL_PLAINTEXT
  #     GATEWAY_ADVERTISED_HOST: conduktor-gateway
  #     GATEWAY_FEATURE_FLAGS_MULTI_TENANCY: false
  #   healthcheck:
  #     test: curl localhost:8888/health
  #     interval: 5s
  #     retries: 25
  #   depends_on:
  #     kafka1:
  #       condition: service_healthy
  #     kafka2:
  #       condition: service_healthy

  

  kafka-client:
    image: confluentinc/cp-kafka:7.4.1
    hostname: kafka-client-demo-v2
    container_name: kafka-client-demo-v2
    command: sleep infinity
    volumes:
      - type: bind
        source: "./clientConfig"
        target: /clientConfig
        read_only: true

volumes:
  pg_data_demo_v2: {}
  # conduktor_data: {}